// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProfileWeb.Data;

namespace ProfileWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220122133506_initWd")]
    partial class initWd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ProfileWeb.Models.Achievement", b =>
                {
                    b.Property<int>("Topic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("KZ_Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TR_Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Topic_Id");

                    b.HasIndex("Id");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("ProfileWeb.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Degree_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Department_ID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Faculty_ID")
                        .HasColumnType("int");

                    b.Property<string>("Firstname_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname_kz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname_ru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname_tr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname_kz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname_ru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname_tr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Middlename_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename_kz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename_ru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename_tr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rank_ID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sex_ID")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Degree_ID");

                    b.HasIndex("Department_ID");

                    b.HasIndex("Faculty_ID");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("Rank_ID");

                    b.HasIndex("Sex_ID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ProfileWeb.Models.Degree", b =>
                {
                    b.Property<int>("Degree_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KZ_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TIP")
                        .HasColumnType("tinyint");

                    b.Property<string>("TR_AD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Degree_ID");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("ProfileWeb.Models.Faculties", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KZ_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TR_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("ProfileWeb.Models.Kafedra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KZ_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TR_AD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kafedras");
                });

            modelBuilder.Entity("ProfileWeb.Models.Qulification", b =>
                {
                    b.Property<int>("Qu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_Qu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("KZ_Qu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_Qu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TR_Qu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Qu_Id");

                    b.HasIndex("Id");

                    b.ToTable("Qulifications");
                });

            modelBuilder.Entity("ProfileWeb.Models.Ranks", b =>
                {
                    b.Property<int>("Rank_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KZ_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_AD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TIP")
                        .HasColumnType("tinyint");

                    b.Property<string>("TR_AD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rank_ID");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("ProfileWeb.Models.Research", b =>
                {
                    b.Property<int>("Res_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("KZ_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Res_Id");

                    b.HasIndex("Id");

                    b.ToTable("Researches");
                });

            modelBuilder.Entity("ProfileWeb.Models.Sex", b =>
                {
                    b.Property<int>("Sex_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sex_EN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex_KZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex_RU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex_TR")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sex_ID");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("ProfileWeb.Models.Workway", b =>
                {
                    b.Property<int>("Work_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EN_Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("KZ_Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RU_Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TR_Work")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Work_Id");

                    b.HasIndex("Id");

                    b.ToTable("Workways");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProfileWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileWeb.Models.Achievement", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Achievements")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileWeb.Models.ApplicationUser", b =>
                {
                    b.HasOne("ProfileWeb.Models.Degree", "Degree")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("Degree_ID");

                    b.HasOne("ProfileWeb.Models.Kafedra", "Kafedra")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("Department_ID");

                    b.HasOne("ProfileWeb.Models.Faculties", "Faculties")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("Faculty_ID");

                    b.HasOne("ProfileWeb.Models.Ranks", "Ranks")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("Rank_ID");

                    b.HasOne("ProfileWeb.Models.Sex", "Sex")
                        .WithMany("ApplicationUser")
                        .HasForeignKey("Sex_ID");
                });

            modelBuilder.Entity("ProfileWeb.Models.Qulification", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Qulifications")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileWeb.Models.Research", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Researches")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileWeb.Models.Workway", b =>
                {
                    b.HasOne("ProfileWeb.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("WorkWays")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
